rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Users ---
    match /users/{userId} {
      // Solo el usuario puede crear su propio documento
      allow create: if request.auth != null && request.auth.uid == userId;

      // Usuario puede leer/editar su doc, admin puede leer cualquier doc
      allow read: if request.auth != null &&
        (request.auth.uid == userId ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');

      allow update: if request.auth != null && request.auth.uid == userId;
    }

    // --- Tasks ---
    match /tasks/{taskId} {
      // Crear: el assigner debe ser el usuario logueado y no debe estar borrada
      allow create: if request.auth != null &&
        request.resource.data.assignerId == request.auth.uid &&
        request.resource.data.deleted == false;

      // Leer: assignee, assigner o admin
      allow read: if request.auth != null &&
        (resource.data.assigneeId == request.auth.uid ||
         resource.data.assignerId == request.auth.uid ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');

      // Actualizar: igual que leer
      allow update: if request.auth != null &&
        (request.auth.uid == resource.data.assignerId ||
         request.auth.uid == resource.data.assigneeId ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    // --- Activity logs (solo admin) ---
    match /activity_logs/{logId} {
      allow read, write: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- Otra colecci√≥n de logs (si necesitas separarla) ---
    match /logs/{docId} {
      allow read, write: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
